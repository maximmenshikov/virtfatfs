#!/bin/bash

export TOP_DIR="$(cd "$(dirname "$(command -v "$0")")" ; pwd -P)"

function fail()
{
	if [ $# -ne 0 ] ; then
		echo "$@" >&2
	fi
	exit 1
}

function usage()
{
	if [ $# -ne 0 ] ; then
		echo "$@" >&2
	fi
	echo "Usage: $0 img_file" >&2
	echo "Mount the image file" >&2
	echo >&2
	echo "       img_file          target image file" >&2
	echo >&2
	echo "Examples:" >&2
	echo "$0 test.img" >&2
	fail
}

cd "${TOP_DIR}" || fail "Failed to change directory"

img_file="$1"
rw="$2"

if [ "$1" == "" ] ; then
	usage
fi

if [ "${img_file}" == "" ] ; then
	usage "Image file is not set"
fi

if [ "${rw}" != "" ] && [ "${rw}" != "rw" ] ; then
	usage "Unknown RW mode: ${rw}"
fi

if [ ! -f "${img_file}" ] ; then
	usage "Image file ${img_file} doesn't exist"
fi

command -v udisksctl > /dev/null || fail "udisksctl is not installed"
command -v rsync > /dev/null || fail "rsync is not installed"
command -v sync > /dev/null || fail "sync is not installed"

rw="${rw:--r}"
result="$(env LC_ALL=C.UTF-8 udisksctl loop-setup -f "${img_file}" ${rw} \
		  --no-user-interaction)"
loop="$(echo "$result" | sed -E "s/.*(\/dev\/.*)\./\1/")"
if [ "$loop" == "" ] ; then
	fail "Failed to make a loop out of image file"
fi

result="$(env LC_ALL=C.UTF-8 udisksctl mount --block-device "$loop")"
media="$(echo "$result" | sed -E "s/.*(\/media\/.*)\./\1/")"
if [ ! -d "${media}" ] ; then
	fail "Failed to mount image"
fi
echo "$media"
echo "$loop"
